<?xml version="1.0" encoding="UTF-8"?>

<?import com.jfoenix.controls.JFXButton?>
<?import com.jfoenix.controls.JFXTabPane?>
<?import com.jfoenix.controls.JFXTextField?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.ScrollPane?>
<?import javafx.scene.control.Separator?>
<?import javafx.scene.control.SplitPane?>
<?import javafx.scene.control.Tab?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.Pane?>
<?import javafx.scene.layout.TilePane?>
<?import javafx.scene.text.Font?>
<?import javafx.scene.text.Text?>

<AnchorPane id="AnchorPane" prefHeight="732.0" prefWidth="1241.0" xmlns="http://javafx.com/javafx/8.0.111" xmlns:fx="http://javafx.com/fxml/1" fx:controller="datastructuresfx.DataStructuresController">
    <children>
        <JFXTabPane layoutX="14.0" layoutY="98.0" prefHeight="830.0" prefWidth="1255.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
         <tabs>
            <Tab text="Stack">
               <content>
                  <SplitPane dividerPositions="0.29797979797979796, 0.5" prefHeight="160.0" prefWidth="200.0">
                    <items>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="700.0" prefWidth="254.0">
                           <children>
                              <Text layoutX="24.0" layoutY="66.0" strokeType="OUTSIDE" strokeWidth="0.0" text="The Stack class represents a last-in-first-out (LIFO) stack of objects. It extends class Vector with five operations that allow a vector to be treated as a stack. The usual push and pop operations are provided, as well as a method to peek at the top item on the stack, a method to test for whether the stack is empty, and a method to search the stack for an item and discover how far it is from the top.When a stack is first created, it contains no items.A more complete and consistent set of LIFO stack operations is provided by the Deque interface and its implementations, which should be used in preference to this class. For example:      Deque&lt;Integer&gt; stack = new ArrayDeque&lt;Integer&gt;();The Stack class represents a last-in-first-out (LIFO) stack of objects. It extends class Vector with five operations that allow a vector to be treated as a stack. The usual push and pop operations are provided, as well as a method to peek at the top item on the stack, a method to test for whether the stack is empty, and a method to search the stack for an item and discover how far it is from the top.When a stack is first created, it contains no items.A more complete and consistent set of LIFO stack operations is provided by the Deque interface and its implementations, which should be used in preference to this class. For example:      Deque&lt;Integer&gt; stack = new ArrayDeque&lt;Integer&gt;();A control that has two or more sides, each separated by a divider, which can be dragged by the user to give more space to one of the sides, resulting in the other side shrinking by an equal amount.Nodes can be positioned horizontally next to each other, or stacked vertically. This can be controlled by setting the orientationProperty().The dividers in a SplitPane have the following behavior " wrappingWidth="317.7294921875" />
                           </children>
                        </AnchorPane>
                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="160.0" prefWidth="100.0">
                           <children>
                              <JFXButton fx:id="spush" buttonType="RAISED" defaultButton="true" layoutX="39.0" layoutY="206.0" onAction="#stackPush" prefHeight="40.0" prefWidth="165.0" ripplerFill="BLACK" style="-fx-background-color: #0E284B; -fx-background-radius: 8px;" text="Push ⤓" textFill="WHITE">
                                 <font>
                                    <Font size="20.0" />
                                 </font>
                              </JFXButton>
                              <JFXTextField fx:id="sdata" alignment="CENTER" labelFloat="true" layoutX="25.0" layoutY="125.0" prefHeight="44.0" prefWidth="193.0" promptText="Push This ⤓" />
                              <JFXButton fx:id="spop" buttonType="RAISED" layoutX="39.0" layoutY="292.0" onAction="#stackPop" prefHeight="40.0" prefWidth="165.0" ripplerFill="BLACK" style="-fx-background-color: #0E284B; -fx-background-radius: 8px;" text="Pop  ⤒" textFill="WHITE">
                                 <font>
                                    <Font size="20.0" />
                                 </font>
                              </JFXButton>
                              <JFXButton fx:id="speek" buttonType="RAISED" layoutX="39.0" layoutY="380.0" onAction="#stackPeek" prefHeight="40.0" prefWidth="165.0" ripplerFill="BLACK" style="-fx-background-color: #0E284B; -fx-background-radius: 8px;" text="Peek  " textFill="WHITE">
                                 <font>
                                    <Font size="20.0" />
                                 </font>
                              </JFXButton>
                              <Separator layoutX="22.0" layoutY="361.0" prefWidth="200.0" />
                              <Label alignment="CENTER" contentDisplay="CENTER" layoutX="33.0" layoutY="481.0" prefHeight="30.0" prefWidth="65.0" style="-fx-background-color: #0E284B;" text="Size :" textFill="WHITE">
                                 <font>
                                    <Font size="20.0" />
                                 </font>
                              </Label>
                              <Label fx:id="ssize" alignment="CENTER" contentDisplay="CENTER" layoutX="111.0" layoutY="481.0" prefHeight="30.0" prefWidth="101.0" style="-fx-background-color: #0E284B;" textFill="WHITE">
                                 <font>
                                    <Font size="20.0" />
                                 </font>
                              </Label>
                           </children>
                        </AnchorPane>
                        <Pane>
                           <children>
                              <ScrollPane fx:id="sspane" hbarPolicy="NEVER" layoutX="152.0" layoutY="28.0" pannable="true" prefHeight="645.0" prefWidth="312.0" style="-fx-border-color: white;">
                                 <content>
                                    <TilePane fx:id="stackDS" alignment="BOTTOM_CENTER" hgap="2.0" maxHeight="1.7976931348623157E308" maxWidth="1.7976931348623157E308" prefHeight="627.0" prefWidth="222.0" style="-fx-border-color: white;" tileAlignment="TOP_CENTER" vgap="2.0" />
                                 </content>
                              </ScrollPane>
                           </children>
                        </Pane>
                    </items>
                  </SplitPane>
               </content>
            </Tab>
            <Tab text="Queue">
              <content>
                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" />
              </content>
            </Tab>
            <Tab text="List">
              <content>
                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" />
              </content>
            </Tab>
            <Tab text="LinkedList">
              <content>
                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" />
              </content>
               <graphic>
                  <JFXTabPane />
               </graphic>
            </Tab>
         </tabs></JFXTabPane>
    </children>
</AnchorPane>
